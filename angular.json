{
  "version": 1,
  "projects": {
    "groceries-list": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/groceries-list",
      "sourceRoot": "apps/groceries-list/src",
      "prefix": "groceries-list",
      "i18n": {
        "sourceLocale": { "code": "en" },
        "locales": {
          "et": {
            "translation": "apps/groceries-list/src/i18n/et.xlf"
          }
        }
      },
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "allowedCommonJsDependencies": ["jsondiffpatch"],
            "outputPath": "dist/apps/groceries-list/browser",
            "index": "apps/groceries-list/src/index.html",
            "main": "apps/groceries-list/src/main.ts",
            "polyfills": "apps/groceries-list/src/polyfills.ts",
            "tsConfig": "apps/groceries-list/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/groceries-list/src/favicon.ico",
              "apps/groceries-list/src/assets",
              "apps/groceries-list/src/manifest.webmanifest"
            ],
            "styles": ["apps/groceries-list/src/styles.scss"],
            "scripts": [],
            "webWorkerTsConfig": "apps/groceries-list/tsconfig.worker.json"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/groceries-list/src/environments/environment.ts",
                  "with": "apps/groceries-list/src/environments/environment.prod.ts"
                }
              ],
              "localize": true,
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/groceries-list/ngsw-config.json"
            },
            "test": {
              "fileReplacements": [
                {
                  "replace": "apps/groceries-list/src/environments/environment.ts",
                  "with": "apps/groceries-list/src/environments/environment.test.ts"
                }
              ],
              "localize": true,
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ],
              "serviceWorker": true,
              "ngswConfigPath": "apps/groceries-list/ngsw-config.json"
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "convert-i18n": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "ts-node tools/scripts/create-firebase-hosting-dir-structure.ts"
              }
            ],
            "parallel": false
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "groceries-list:build",
            "proxyConfig": "apps/groceries-list/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "groceries-list:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "groceries-list:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/groceries-list/src/**/*.ts", "apps/groceries-list/src/**/*.html"],
            "tsConfig": ["apps/groceries-list/tsconfig.worker.json"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/groceries-list/jest.config.js",
            "passWithNoTests": true,
            "tsConfig": "apps/groceries-list/tsconfig.spec.json"
          },
          "outputs": ["coverage/apps/groceries-list"]
        },
        "server": {
          "builder": "@angular-devkit/build-angular:server",
          "options": {
            "outputPath": "dist/apps/groceries-list/server",
            "main": "apps/groceries-list/src/main.server.ts",
            "tsConfig": "apps/groceries-list/tsconfig.server.json"
          },
          "configurations": {
            "production": {
              "outputHashing": "media",
              "fileReplacements": [
                {
                  "replace": "apps/groceries-list/src/environments/environment.ts",
                  "with": "apps/groceries-list/src/environments/environment.prod.ts"
                }
              ],
              "sourceMap": false,
              "optimization": true,
              "localize": true
            },
            "test": {
              "outputHashing": "media",
              "fileReplacements": [
                {
                  "replace": "apps/groceries-list/src/environments/environment.ts",
                  "with": "apps/groceries-list/src/environments/environment.test.ts"
                }
              ],
              "optimization": true,
              "localize": true
            }
          }
        },
        "app-shell": {
          "builder": "@angular-devkit/build-angular:app-shell",
          "options": {
            "browserTarget": "groceries-list:build",
            "serverTarget": "groceries-list:server",
            "route": "shell"
          },
          "configurations": {
            "production": {
              "browserTarget": "groceries-list:build:production",
              "serverTarget": "groceries-list:server:production"
            },
            "test": {
              "browserTarget": "groceries-list:build:test",
              "serverTarget": "groceries-list:server:test"
            }
          }
        },
        "deploy": {
          "builder": "@angular/fire:deploy",
          "options": {}
        }
      }
    },
    "groceries-list-e2e": {
      "root": "apps/groceries-list-e2e",
      "sourceRoot": "apps/groceries-list-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/groceries-list-e2e/cypress.json",
            "tsConfig": "apps/groceries-list-e2e/tsconfig.e2e.json",
            "devServerTarget": "groceries-list:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "groceries-list:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/groceries-list-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "api-interfaces": {
      "root": "libs/api-interfaces",
      "sourceRoot": "libs/api-interfaces/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api-interfaces/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/api-interfaces/jest.config.js",
            "passWithNoTests": true,
            "tsConfig": "libs/api-interfaces/tsconfig.spec.json"
          },
          "outputs": ["coverage/libs/api-interfaces"]
        }
      }
    },
    "functions": {
      "root": "apps/functions",
      "sourceRoot": "apps/functions/src",
      "projectType": "application",
      "prefix": "api",
      "schematics": {},
      "architect": {
        "build-node": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/functions",
            "main": "apps/functions/src/main.ts",
            "tsConfig": "apps/functions/tsconfig.app.json",
            "assets": [
              "apps/functions/src/assets",
              {
                "glob": ".runtimeconfig.json",
                "input": ".",
                "output": "."
              }
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/functions/src/environments/environment.ts",
                  "with": "apps/functions/src/environments/environment.prod.ts"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "nx run functions:build-node"
              },
              {
                "command": "ts-node tools/scripts/build-firebase-functions-package-json.ts"
              }
            ],
            "parallel": false
          }
        },
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase emulators:start --only functions --inspect-functions"
          }
        },
        "deploy-functions": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "firebase deploy --only functions"
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "nx run functions:build"
              },
              {
                "command": "nx run functions:deploy-functions"
              }
            ],
            "parallel": false
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/functions/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/functions/jest.config.js",
            "passWithNoTests": true,
            "tsConfig": "apps/functions/tsconfig.spec.json"
          },
          "outputs": ["coverage/apps/functions"]
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "schematics": {
    "@nrwl/angular": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    }
  },
  "defaultProject": "groceries-list"
}
